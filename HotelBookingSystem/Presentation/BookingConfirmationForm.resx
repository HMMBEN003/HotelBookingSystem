<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="homeButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>