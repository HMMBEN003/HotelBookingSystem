<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="HotelDBDataSet" targetNamespace="http://tempuri.org/HotelDBDataSet.xsd" xmlns:mstns="http://tempuri.org/HotelDBDataSet.xsd" xmlns="http://tempuri.org/HotelDBDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="HotelDBConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="HotelDBConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.HotelBookingSystem.Properties.Settings.GlobalReference.Default.HotelDBConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="LoginCredentialsTableAdapter" GeneratorDataComponentClassName="LoginCredentialsTableAdapter" Name="LoginCredentials" UserDataComponentName="LoginCredentialsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="HotelDBConnectionString (Settings)" DbObjectName="dbo.LoginCredentials" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[LoginCredentials] WHERE (([staff_number] = @Original_staff_number) AND ([password] = @Original_password))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_staff_number" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="staff_number" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[LoginCredentials] ([staff_number], [password]) VALUES (@staff_number, @password);
SELECT staff_number, password FROM LoginCredentials WHERE (staff_number = @staff_number)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@staff_number" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="staff_number" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT staff_number, password FROM dbo.LoginCredentials</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[LoginCredentials] SET [staff_number] = @staff_number, [password] = @password WHERE (([staff_number] = @Original_staff_number) AND ([password] = @Original_password));
SELECT staff_number, password FROM LoginCredentials WHERE (staff_number = @staff_number)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@staff_number" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="staff_number" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_staff_number" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="staff_number" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="staff_number" DataSetColumn="staff_number" />
              <Mapping SourceColumn="password" DataSetColumn="password" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="HotelDBDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="HotelDBDataSet" msprop:Generator_DataSetName="HotelDBDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="LoginCredentials" msprop:Generator_RowEvHandlerName="LoginCredentialsRowChangeEventHandler" msprop:Generator_RowDeletedName="LoginCredentialsRowDeleted" msprop:Generator_RowDeletingName="LoginCredentialsRowDeleting" msprop:Generator_RowEvArgName="LoginCredentialsRowChangeEvent" msprop:Generator_TablePropName="LoginCredentials" msprop:Generator_RowChangedName="LoginCredentialsRowChanged" msprop:Generator_RowChangingName="LoginCredentialsRowChanging" msprop:Generator_TableClassName="LoginCredentialsDataTable" msprop:Generator_RowClassName="LoginCredentialsRow" msprop:Generator_TableVarName="tableLoginCredentials" msprop:Generator_UserTableName="LoginCredentials">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="staff_number" msprop:Generator_ColumnPropNameInRow="staff_number" msprop:Generator_ColumnPropNameInTable="staff_numberColumn" msprop:Generator_ColumnVarNameInTable="columnstaff_number" msprop:Generator_UserColumnName="staff_number">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="password" msprop:Generator_ColumnPropNameInRow="password" msprop:Generator_ColumnPropNameInTable="passwordColumn" msprop:Generator_ColumnVarNameInTable="columnpassword" msprop:Generator_UserColumnName="password">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:LoginCredentials" />
      <xs:field xpath="mstns:staff_number" />
    </xs:unique>
  </xs:element>
</xs:schema>